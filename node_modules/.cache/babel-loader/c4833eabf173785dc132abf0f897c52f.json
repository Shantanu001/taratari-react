{"ast":null,"code":"var _classCallCheck = require(\"/Users/shantanujaiswal/work/myProjects/test/taratari-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/shantanujaiswal/work/myProjects/test/taratari-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/shantanujaiswal/work/myProjects/test/taratari-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/shantanujaiswal/work/myProjects/test/taratari-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar AbstractGeocoder = require('./abstractgeocoder');\n\nvar OPTIONS = ['apiKey', 'appId', 'appCode', 'language', 'politicalView', 'country', 'state', 'production'];\n/**\n * Constructor\n * @param <object> httpAdapter Http Adapter\n * @param <object> options     Options (appId, appCode, language, politicalView, country, state, production)\n */\n\nvar HereGeocoder = /*#__PURE__*/function (_AbstractGeocoder) {\n  \"use strict\";\n\n  _inherits(HereGeocoder, _AbstractGeocoder);\n\n  var _super = _createSuper(HereGeocoder);\n\n  function HereGeocoder(httpAdapter, options) {\n    var _this2;\n\n    _classCallCheck(this, HereGeocoder);\n\n    _this2 = _super.call(this, httpAdapter, options);\n    _this2.options = options;\n    OPTIONS.forEach(function (option) {\n      if (!options[option] || options[option] == 'undefined') {\n        _this2.options[option] = null;\n      }\n    }); // appId and appCode are deprecated\n\n    if (!_this2.options.apiKey && !(_this2.options.appId && _this2.options.appCode)) {\n      throw new Error('You must specify apiKey to use Here Geocoder');\n    }\n\n    return _this2;\n  }\n  /**\n   * Geocode\n   * @param <string>   value    Value to geocode (Address)\n   * @param <function> callback Callback method\n   */\n\n\n  _createClass(HereGeocoder, [{\n    key: \"_geocode\",\n    value: function _geocode(value, callback) {\n      var _this = this;\n\n      var params = this._prepareQueryString();\n\n      if (value.address) {\n        if (value.language) {\n          params.language = value.language;\n        }\n\n        if (value.politicalView) {\n          params.politicalview = value.politicalView;\n        }\n\n        if (value.country) {\n          params.country = value.country;\n\n          if (value.state) {\n            params.state = value.state;\n          } else {\n            delete params.state;\n          }\n        }\n\n        if (value.zipcode) {\n          params.postalcode = value.zipcode;\n        }\n\n        params.searchtext = value.address;\n      } else {\n        params.searchtext = value;\n      }\n\n      this.httpAdapter.get(this._geocodeEndpoint, params, function (err, result) {\n        var results = [];\n        results.raw = result;\n\n        if (err) {\n          return callback(err, results);\n        } else {\n          var view = result.Response.View[0];\n\n          if (!view) {\n            return callback(false, results);\n          } // Format each geocoding result\n\n\n          results = view.Result.map(_this._formatResult);\n          results.raw = result;\n          callback(false, results);\n        }\n      });\n    }\n    /**\n     * Reverse geocoding\n     * @param {lat:<number>,lon:<number>}  lat: Latitude, lon: Longitude\n     * @param <function> callback Callback method\n     */\n\n  }, {\n    key: \"_reverse\",\n    value: function _reverse(query, callback) {\n      var lat = query.lat;\n      var lng = query.lon;\n\n      var _this = this;\n\n      var params = this._prepareQueryString();\n\n      params.pos = lat + ',' + lng;\n      params.mode = 'trackPosition';\n      this.httpAdapter.get(this._reverseEndpoint, params, function (err, result) {\n        var results = [];\n        results.raw = result;\n\n        if (err) {\n          return callback(err, results);\n        } else {\n          var view = result.Response.View[0];\n\n          if (!view) {\n            return callback(false, results);\n          } // Format each geocoding result\n\n\n          results = view.Result.map(_this._formatResult);\n          results.raw = result;\n          callback(false, results);\n        }\n      });\n    }\n  }, {\n    key: \"_formatResult\",\n    value: function _formatResult(result) {\n      var location = result.Location || {};\n      var address = location.Address || {};\n      var i;\n      var extractedObj = {\n        formattedAddress: address.Label || null,\n        latitude: location.DisplayPosition.Latitude,\n        longitude: location.DisplayPosition.Longitude,\n        country: null,\n        countryCode: address.Country || null,\n        state: address.State || null,\n        county: address.County || null,\n        city: address.City || null,\n        zipcode: address.PostalCode || null,\n        district: address.District || null,\n        streetName: address.Street || null,\n        streetNumber: address.HouseNumber || null,\n        building: address.Building || null,\n        extra: {\n          herePlaceId: location.LocationId || null,\n          confidence: result.Relevance || 0\n        },\n        administrativeLevels: {}\n      };\n\n      for (i = 0; i < address.AdditionalData.length; i++) {\n        var additionalData = address.AdditionalData[i];\n\n        switch (additionalData.key) {\n          //Country 2-digit code\n          case 'Country2':\n            extractedObj.countryCode = additionalData.value;\n            break;\n          //Country name\n\n          case 'CountryName':\n            extractedObj.country = additionalData.value;\n            break;\n          //State name\n\n          case 'StateName':\n            extractedObj.administrativeLevels.level1long = additionalData.value;\n            extractedObj.state = additionalData.value;\n            break;\n          //County name\n\n          case 'CountyName':\n            extractedObj.administrativeLevels.level2long = additionalData.value;\n            extractedObj.county = additionalData.value;\n        }\n      }\n\n      return extractedObj;\n    }\n  }, {\n    key: \"_prepareQueryString\",\n    value: function _prepareQueryString() {\n      var params = {\n        additionaldata: 'Country2,true',\n        gen: 8\n      }; // Deprecated\n\n      if (this.options.appId) {\n        params.app_id = this.options.appId;\n      } // Deprecated\n\n\n      if (this.options.appCode) {\n        params.app_code = this.options.appCode;\n      }\n\n      if (this.options.apiKey) {\n        params.apiKey = this.options.apiKey;\n      }\n\n      if (this.options.language) {\n        params.language = this.options.language;\n      }\n\n      if (this.options.politicalView) {\n        params.politicalview = this.options.politicalView;\n      }\n\n      if (this.options.country) {\n        params.country = this.options.country;\n      }\n\n      if (this.options.state) {\n        params.state = this.options.state;\n      }\n\n      return params;\n    }\n  }]);\n\n  return HereGeocoder;\n}(AbstractGeocoder);\n\nObject.defineProperties(HereGeocoder.prototype, {\n  // Here geocoding API endpoint\n  _geocodeEndpoint: {\n    get: function get() {\n      return 'https://geocoder.ls.hereapi.com/6.2/geocode.json';\n    }\n  },\n  // Here reverse geocoding API endpoint\n  _reverseEndpoint: {\n    get: function get() {\n      return 'https://reverse.geocoder.ls.hereapi.com/6.2/reversegeocode.json';\n    }\n  }\n});\nmodule.exports = HereGeocoder;","map":{"version":3,"sources":["/Users/shantanujaiswal/work/myProjects/test/taratari-react/node_modules/node-geocoder/lib/geocoder/heregeocoder.js"],"names":["AbstractGeocoder","require","OPTIONS","HereGeocoder","httpAdapter","options","forEach","option","apiKey","appId","appCode","Error","value","callback","_this","params","_prepareQueryString","address","language","politicalView","politicalview","country","state","zipcode","postalcode","searchtext","get","_geocodeEndpoint","err","result","results","raw","view","Response","View","Result","map","_formatResult","query","lat","lng","lon","pos","mode","_reverseEndpoint","location","Location","Address","i","extractedObj","formattedAddress","Label","latitude","DisplayPosition","Latitude","longitude","Longitude","countryCode","Country","State","county","County","city","City","PostalCode","district","District","streetName","Street","streetNumber","HouseNumber","building","Building","extra","herePlaceId","LocationId","confidence","Relevance","administrativeLevels","AdditionalData","length","additionalData","key","level1long","level2long","additionaldata","gen","app_id","app_code","Object","defineProperties","prototype","module","exports"],"mappings":"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","sourcesContent":["const AbstractGeocoder = require('./abstractgeocoder');\n\nconst OPTIONS = [\n  'apiKey',\n  'appId',\n  'appCode',\n  'language',\n  'politicalView',\n  'country',\n  'state',\n  'production'\n];\n\n/**\n * Constructor\n * @param <object> httpAdapter Http Adapter\n * @param <object> options     Options (appId, appCode, language, politicalView, country, state, production)\n */\nclass HereGeocoder extends AbstractGeocoder {\n  constructor(httpAdapter, options) {\n    super(httpAdapter, options);\n    this.options = options;\n    OPTIONS.forEach(option => {\n      if (!options[option] || options[option] == 'undefined') {\n        this.options[option] = null;\n      }\n    });\n\n    // appId and appCode are deprecated\n    if (!this.options.apiKey && !(this.options.appId && this.options.appCode)) {\n      throw new Error('You must specify apiKey to use Here Geocoder');\n    }\n  }\n\n  /**\n   * Geocode\n   * @param <string>   value    Value to geocode (Address)\n   * @param <function> callback Callback method\n   */\n  _geocode(value, callback) {\n    var _this = this;\n    var params = this._prepareQueryString();\n\n    if (value.address) {\n      if (value.language) {\n        params.language = value.language;\n      }\n      if (value.politicalView) {\n        params.politicalview = value.politicalView;\n      }\n      if (value.country) {\n        params.country = value.country;\n        if (value.state) {\n          params.state = value.state;\n        } else {\n          delete params.state;\n        }\n      }\n      if (value.zipcode) {\n        params.postalcode = value.zipcode;\n      }\n      params.searchtext = value.address;\n    } else {\n      params.searchtext = value;\n    }\n\n    this.httpAdapter.get(this._geocodeEndpoint, params, function(err, result) {\n      var results = [];\n      results.raw = result;\n\n      if (err) {\n        return callback(err, results);\n      } else {\n        var view = result.Response.View[0];\n        if (!view) {\n          return callback(false, results);\n        }\n\n        // Format each geocoding result\n        results = view.Result.map(_this._formatResult);\n        results.raw = result;\n\n        callback(false, results);\n      }\n    });\n  }\n\n  /**\n   * Reverse geocoding\n   * @param {lat:<number>,lon:<number>}  lat: Latitude, lon: Longitude\n   * @param <function> callback Callback method\n   */\n  _reverse(query, callback) {\n    var lat = query.lat;\n    var lng = query.lon;\n\n    var _this = this;\n    var params = this._prepareQueryString();\n    params.pos = lat + ',' + lng;\n    params.mode = 'trackPosition';\n\n    this.httpAdapter.get(this._reverseEndpoint, params, function(err, result) {\n      var results = [];\n      results.raw = result;\n\n      if (err) {\n        return callback(err, results);\n      } else {\n        var view = result.Response.View[0];\n        if (!view) {\n          return callback(false, results);\n        }\n\n        // Format each geocoding result\n        results = view.Result.map(_this._formatResult);\n        results.raw = result;\n\n        callback(false, results);\n      }\n    });\n  }\n\n  _formatResult(result) {\n    var location = result.Location || {};\n    var address = location.Address || {};\n    var i;\n\n    var extractedObj = {\n      formattedAddress: address.Label || null,\n      latitude: location.DisplayPosition.Latitude,\n      longitude: location.DisplayPosition.Longitude,\n      country: null,\n      countryCode: address.Country || null,\n      state: address.State || null,\n      county: address.County || null,\n      city: address.City || null,\n      zipcode: address.PostalCode || null,\n      district: address.District || null,\n      streetName: address.Street || null,\n      streetNumber: address.HouseNumber || null,\n      building: address.Building || null,\n      extra: {\n        herePlaceId: location.LocationId || null,\n        confidence: result.Relevance || 0\n      },\n      administrativeLevels: {}\n    };\n\n    for (i = 0; i < address.AdditionalData.length; i++) {\n      var additionalData = address.AdditionalData[i];\n      switch (additionalData.key) {\n        //Country 2-digit code\n        case 'Country2':\n          extractedObj.countryCode = additionalData.value;\n          break;\n        //Country name\n        case 'CountryName':\n          extractedObj.country = additionalData.value;\n          break;\n        //State name\n        case 'StateName':\n          extractedObj.administrativeLevels.level1long = additionalData.value;\n          extractedObj.state = additionalData.value;\n          break;\n        //County name\n        case 'CountyName':\n          extractedObj.administrativeLevels.level2long = additionalData.value;\n          extractedObj.county = additionalData.value;\n      }\n    }\n\n    return extractedObj;\n  }\n  _prepareQueryString() {\n    var params = {\n      additionaldata: 'Country2,true',\n      gen: 8\n    };\n\n    // Deprecated\n    if (this.options.appId) {\n      params.app_id = this.options.appId;\n    }\n    // Deprecated\n    if (this.options.appCode) {\n      params.app_code = this.options.appCode;\n    }\n\n    if (this.options.apiKey) {\n      params.apiKey = this.options.apiKey;\n    }\n    if (this.options.language) {\n      params.language = this.options.language;\n    }\n    if (this.options.politicalView) {\n      params.politicalview = this.options.politicalView;\n    }\n    if (this.options.country) {\n      params.country = this.options.country;\n    }\n    if (this.options.state) {\n      params.state = this.options.state;\n    }\n\n    return params;\n  }\n}\n\nObject.defineProperties(HereGeocoder.prototype, {\n  // Here geocoding API endpoint\n  _geocodeEndpoint: {\n    get: function() {\n      return 'https://geocoder.ls.hereapi.com/6.2/geocode.json';\n    }\n  },\n\n  // Here reverse geocoding API endpoint\n  _reverseEndpoint: {\n    get: function() {\n      return 'https://reverse.geocoder.ls.hereapi.com/6.2/reversegeocode.json';\n    }\n  }\n});\n\nmodule.exports = HereGeocoder;\n"]},"metadata":{},"sourceType":"script"}