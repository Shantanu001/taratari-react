{"ast":null,"code":"var _jsxFileName = \"/Users/shantanujaiswal/Documents/projects/taratari/taratari-react/src/container/LandingPage.js\";\nimport React, { useState, useEffect } from 'react';\nimport NodeGeocoder from 'node-geocoder';\nimport { Container, Row, Col, Image, Button, Dropdown } from 'react-bootstrap';\nimport { useHistory } from \"react-router-dom\";\nimport Header from \"../component/header\";\nimport './LandingPage.scss';\nimport backgroundImage from \"../assets/mobile.jpg\";\n\nconst LandingPage = () => {\n  let options = {\n    provider: 'openstreetmap'\n  };\n  let geoCoder = NodeGeocoder(options); // Reverse Geocode\n\n  geoCoder.reverse({\n    lat: 38.66,\n    lon: -78.43\n  }).then(res => {\n    console.log(res);\n  }).catch(err => {\n    console.log(err);\n  }); // const options = {\n  //     provider: 'openstreetmap',\n  //     fetch:'POST'\n  //   };\n  //const geoCoder = NodeGeocoder(options);\n\n  let history = useHistory(); // geoCoder.reverse({ lat: 45.767, lon: 4.833 },function(err,result){\n  //     alert(err,result);\n  //       });\n  //   (async () => {\n  //     const location = await geoCoder.reverse({ lat: 45.767, lon: 4.833 });\n  //     /** A list of matching locations is returned */\n  //     console.log(JSON.stringify(location));\n  //   })();\n  // navigator.geolocation.getCurrentPosition(async function(position) {\n  //     console.log(position.coords.latitude);\n  //     // NodeGeocoder.reverseGeocode(position.coords.latitude,position.coords.longitude, function ( err, data ) {\n  //     //     console.log(data);\n  //     //   });\n  //       console.log(await geocoder.reverse({ lat: position.coords.latitude, lon: position.coords.longitude }))    ;\n  //   });\n\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 16\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    styles: {\n      backgroundImage: `url(${backgroundImage})`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }));\n};\n\nexport default LandingPage;","map":{"version":3,"sources":["/Users/shantanujaiswal/Documents/projects/taratari/taratari-react/src/container/LandingPage.js"],"names":["React","useState","useEffect","NodeGeocoder","Container","Row","Col","Image","Button","Dropdown","useHistory","Header","backgroundImage","LandingPage","options","provider","geoCoder","reverse","lat","lon","then","res","console","log","catch","err","history"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAOC,YAAP,MAAyB,eAAzB;AACA,SAAQC,SAAR,EAAkBC,GAAlB,EAAsBC,GAAtB,EAA0BC,KAA1B,EAAgCC,MAAhC,EAAuCC,QAAvC,QAAsD,iBAAtD;AACA,SAAQC,UAAR,QAA0B,kBAA1B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAO,oBAAP;AACA,OAAOC,eAAP,MAA4B,sBAA5B;;AAEA,MAAMC,WAAW,GAAG,MAAI;AACpB,MAAIC,OAAO,GAAG;AACVC,IAAAA,QAAQ,EAAE;AADA,GAAd;AAGE,MAAIC,QAAQ,GAAGb,YAAY,CAACW,OAAD,CAA3B,CAJkB,CAKlB;;AACEE,EAAAA,QAAQ,CAACC,OAAT,CAAiB;AAACC,IAAAA,GAAG,EAAC,KAAL;AAAYC,IAAAA,GAAG,EAAC,CAAC;AAAjB,GAAjB,EACCC,IADD,CACOC,GAAD,IAAQ;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,GAHD,EAICG,KAJD,CAIQC,GAAD,IAAQ;AACbH,IAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACD,GAND,EANgB,CAapB;AACA;AACA;AACA;AACA;;AACA,MAAIC,OAAO,GAAGhB,UAAU,EAAxB,CAlBoB,CAmBpB;AACA;AAEA;AAEI;AACA;AAEA;AACA;AAEA;AAEJ;AACA;AACA;AACA;AACA;AACA;AAEA;;AACI,sBACG,oBAAC,SAAD;AAAW,IAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEK,oBAAC,GAAD;AAAK,IAAA,MAAM,EAAI;AAACE,MAAAA,eAAe,EAAE,OAAMA,eAAgB;AAAxC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFL,CADH;AAkBP,CA1DD;;AA4DA,eAAeC,WAAf","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport NodeGeocoder from 'node-geocoder';\nimport {Container,Row,Col,Image,Button,Dropdown} from 'react-bootstrap';\nimport {useHistory}  from \"react-router-dom\";\nimport Header from \"../component/header\";\nimport './LandingPage.scss';\nimport backgroundImage from \"../assets/mobile.jpg\";\n\nconst LandingPage = ()=>{\n    let options = {\n        provider: 'openstreetmap'\n      };\n      let geoCoder = NodeGeocoder(options);\n      // Reverse Geocode\n        geoCoder.reverse({lat:38.66, lon:-78.43})\n        .then((res)=> {\n          console.log(res);\n        })\n        .catch((err)=> {\n          console.log(err);\n        });\n    // const options = {\n    //     provider: 'openstreetmap',\n    //     fetch:'POST'\n    //   };\n    //const geoCoder = NodeGeocoder(options);\n    let history = useHistory();\n    // geoCoder.reverse({ lat: 45.767, lon: 4.833 },function(err,result){\n    //     alert(err,result);\n        \n    //       });\n\n        //   (async () => {\n        //     const location = await geoCoder.reverse({ lat: 45.767, lon: 4.833 });\n            \n        //     /** A list of matching locations is returned */\n        //     console.log(JSON.stringify(location));\n\n        //   })();\n        \n    // navigator.geolocation.getCurrentPosition(async function(position) {\n    //     console.log(position.coords.latitude);\n    //     // NodeGeocoder.reverseGeocode(position.coords.latitude,position.coords.longitude, function ( err, data ) {\n    //     //     console.log(data);\n    //     //   });\n    //       console.log(await geocoder.reverse({ lat: position.coords.latitude, lon: position.coords.longitude }))    ;\n\n    //   });\n        return (\n           <Container fluid>\n               <Header/>\n                <Row styles = {{backgroundImage:`url(${backgroundImage})` }}>\n                    {/* <Col lg={true} >\n                        <Image className={\"left-sidebar\"}  src={require(\"../assets/online-store-57e6d24743_1280.png\")} fluid/>\n                    </Col>\n                    <Col  lg={true} className = {\"right-sidebar\"}>\n                        <Row className = {\"heading\"}>Why TaraTari?</Row>\n                        <Row><p>&#9989;  &nbsp; INSTANT SELL & BUY ANY ITEM</p></Row>\n                        <Row><p>&#9989;  &nbsp; FREE LISTING</p></Row>\n                        <Row sm={true}><p>&#9989;  &nbsp; QUICK RESPONSE FROM GENUINE BUYERS AND SELLERS</p></Row>\n                        <Row ><Button onClick = {()=>{history.push('/home')}} className={\"explore-button\"} >EXPLORE</Button></Row>\n                    </Col> */}\n                </Row>   \n            </Container>\n\n    );\n};\n\nexport default LandingPage;"]},"metadata":{},"sourceType":"module"}