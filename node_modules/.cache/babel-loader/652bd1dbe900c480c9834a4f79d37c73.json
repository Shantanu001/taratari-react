{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/shantanujaiswal/Documents/projects/taratari/taratari-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/shantanujaiswal/Documents/projects/taratari/taratari-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _objectSpread = require(\"/Users/shantanujaiswal/Documents/projects/taratari/taratari-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _classCallCheck = require(\"/Users/shantanujaiswal/Documents/projects/taratari/taratari-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/shantanujaiswal/Documents/projects/taratari/taratari-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar HttpError = require('../error/httperror.js');\n\nvar nodeFetch = require('node-fetch');\n\nvar querystring = require('querystring');\n\nvar BPromise = require('bluebird');\n\nvar FetchAdapter = /*#__PURE__*/function () {\n  function FetchAdapter() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, FetchAdapter);\n\n    this.fetch = options.fetch || nodeFetch;\n    this.options = _objectSpread({}, options);\n    delete this.options.fetch;\n  }\n\n  _createClass(FetchAdapter, [{\n    key: \"supportsHttps\",\n    value: function supportsHttps() {\n      return true;\n    }\n  }, {\n    key: \"get\",\n    value: function get(url, params, callback) {\n      var _this = this;\n\n      var options = {\n        headers: {\n          'user-agent': 'Mozilla/5.0 (X11; Linux i586; rv:31.0) Gecko/20100101 Firefox/31.0'\n        }\n      };\n\n      if (this.options) {\n        for (var k in this.options) {\n          var v = this.options[k];\n\n          if (!v) {\n            continue;\n          }\n\n          options[k] = v;\n        }\n      }\n\n      return BPromise.resolve().then( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _this.fetch(url + '?' + querystring.encode(params), options);\n\n              case 2:\n                res = _context.sent;\n                return _context.abrupt(\"return\", res.json());\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))).catch(function (error) {\n        var _error = error.cause ? error.cause : error;\n\n        throw new HttpError(_error.message, {\n          code: _error.code\n        });\n      }).asCallback(callback);\n    }\n  }]);\n\n  return FetchAdapter;\n}();\n\nmodule.exports = FetchAdapter;","map":{"version":3,"sources":["/Users/shantanujaiswal/Documents/projects/taratari/taratari-react/node_modules/node-geocoder/lib/httpadapter/fetchadapter.js"],"names":["HttpError","require","nodeFetch","querystring","BPromise","FetchAdapter","options","fetch","url","params","callback","headers","k","v","resolve","then","encode","res","json","catch","error","_error","cause","message","code","asCallback","module","exports"],"mappings":"AAAA;;;;;;;;;;;;AAEA,IAAMA,SAAS,GAAGC,OAAO,CAAC,uBAAD,CAAzB;;AACA,IAAMC,SAAS,GAAGD,OAAO,CAAC,YAAD,CAAzB;;AACA,IAAME,WAAW,GAAGF,OAAO,CAAC,aAAD,CAA3B;;AACA,IAAMG,QAAQ,GAAGH,OAAO,CAAC,UAAD,CAAxB;;IAEMI,Y;AACJ,0BAA0B;AAAA,QAAdC,OAAc,uEAAJ,EAAI;;AAAA;;AACxB,SAAKC,KAAL,GAAaD,OAAO,CAACC,KAAR,IAAiBL,SAA9B;AACA,SAAKI,OAAL,qBAAoBA,OAApB;AACA,WAAO,KAAKA,OAAL,CAAaC,KAApB;AACD;;;;oCAEe;AACd,aAAO,IAAP;AACD;;;wBAEGC,G,EAAKC,M,EAAQC,Q,EAAU;AAAA;;AACzB,UAAIJ,OAAO,GAAG;AACZK,QAAAA,OAAO,EAAE;AACP,wBACE;AAFK;AADG,OAAd;;AAOA,UAAI,KAAKL,OAAT,EAAkB;AAChB,aAAK,IAAIM,CAAT,IAAc,KAAKN,OAAnB,EAA4B;AAC1B,cAAIO,CAAC,GAAG,KAAKP,OAAL,CAAaM,CAAb,CAAR;;AACA,cAAI,CAACC,CAAL,EAAQ;AACN;AACD;;AACDP,UAAAA,OAAO,CAACM,CAAD,CAAP,GAAaC,CAAb;AACD;AACF;;AACD,aAAOT,QAAQ,CAACU,OAAT,GACJC,IADI,wEACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACc,KAAI,CAACR,KAAL,CAChBC,GAAG,GAAG,GAAN,GAAYL,WAAW,CAACa,MAAZ,CAAmBP,MAAnB,CADI,EAEhBH,OAFgB,CADd;;AAAA;AACEW,gBAAAA,GADF;AAAA,iDAMGA,GAAG,CAACC,IAAJ,EANH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADD,IASJC,KATI,CASE,UAASC,KAAT,EAAgB;AACrB,YAAIC,MAAM,GAAGD,KAAK,CAACE,KAAN,GAAcF,KAAK,CAACE,KAApB,GAA4BF,KAAzC;;AACA,cAAM,IAAIpB,SAAJ,CAAcqB,MAAM,CAACE,OAArB,EAA8B;AAClCC,UAAAA,IAAI,EAAEH,MAAM,CAACG;AADqB,SAA9B,CAAN;AAGD,OAdI,EAeJC,UAfI,CAeOf,QAfP,CAAP;AAgBD;;;;;;AAGHgB,MAAM,CAACC,OAAP,GAAiBtB,YAAjB","sourcesContent":["'use strict';\n\nconst HttpError = require('../error/httperror.js');\nconst nodeFetch = require('node-fetch');\nconst querystring = require('querystring');\nconst BPromise = require('bluebird');\n\nclass FetchAdapter {\n  constructor(options = {}) {\n    this.fetch = options.fetch || nodeFetch;\n    this.options = { ...options };\n    delete this.options.fetch;\n  }\n\n  supportsHttps() {\n    return true;\n  }\n\n  get(url, params, callback) {\n    var options = {\n      headers: {\n        'user-agent':\n          'Mozilla/5.0 (X11; Linux i586; rv:31.0) Gecko/20100101 Firefox/31.0'\n      }\n    };\n\n    if (this.options) {\n      for (var k in this.options) {\n        var v = this.options[k];\n        if (!v) {\n          continue;\n        }\n        options[k] = v;\n      }\n    }\n    return BPromise.resolve()\n      .then(async () => {\n        const res = await this.fetch(\n          url + '?' + querystring.encode(params),\n          options\n        );\n\n        return res.json();\n      })\n      .catch(function(error) {\n        var _error = error.cause ? error.cause : error;\n        throw new HttpError(_error.message, {\n          code: _error.code\n        });\n      })\n      .asCallback(callback);\n  }\n}\n\nmodule.exports = FetchAdapter;\n"]},"metadata":{},"sourceType":"script"}