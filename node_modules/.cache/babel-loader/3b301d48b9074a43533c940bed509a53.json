{"ast":null,"code":"var _jsxFileName = \"/Users/shantanujaiswal/Documents/projects/taratari/taratari-react/src/container/Form2.js\";\nimport React, { useState, useEffect } from \"react\";\nimport 'react-dropzone-uploader/dist/styles.css';\nimport Dropzone from 'react-dropzone-uploader';\n\nconst Form2 = props => {\n  // specify upload params and url for your files\n  const getUploadParams = ({\n    meta\n  }) => {\n    return {\n      url: 'https://httpbin.org/post'\n    };\n  }; // called every time a file's `status` changes\n\n\n  const handleChangeStatus = ({\n    meta,\n    file\n  }, status) => {\n    console.log(status, meta, file);\n\n    if (status === \"done\") {\n      let event = {};\n      event.target = {};\n      event.target.name = \"Image\";\n      event.target.value = getBase64Image(meta.previewUrl);\n      props.onChange(event);\n    }\n  };\n\n  const getBase64Image = (imgUrl, callback) => {\n    var img = new Image(); // onload fires when the image is fully loadded, and has width and height\n\n    img.onload = function () {\n      var canvas = document.createElement(\"canvas\");\n      canvas.width = img.width;\n      canvas.height = img.height;\n      var ctx = canvas.getContext(\"2d\");\n      ctx.drawImage(img, 0, 0);\n      var dataURL = canvas.toDataURL(\"image/png\"),\n          dataURL = dataURL.replace(/^data:image\\/(png|jpg);base64,/, \"\");\n      callback(dataURL); // the base64 string\n    }; // set attributes and src \n\n\n    img.setAttribute('crossOrigin', 'anonymous'); //\n\n    img.src = imgUrl;\n  }; // receives array of files that are done uploading when submit button is clicked\n\n\n  const handleSubmit = files => {\n    console.log(files.map(f => f.meta));\n  };\n\n  return /*#__PURE__*/React.createElement(Dropzone, {\n    getUploadParams: getUploadParams,\n    onChangeStatus: handleChangeStatus,\n    onSubmit: handleSubmit,\n    accept: \"image/*\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default Form2;","map":{"version":3,"sources":["/Users/shantanujaiswal/Documents/projects/taratari/taratari-react/src/container/Form2.js"],"names":["React","useState","useEffect","Dropzone","Form2","props","getUploadParams","meta","url","handleChangeStatus","file","status","console","log","event","target","name","value","getBase64Image","previewUrl","onChange","imgUrl","callback","img","Image","onload","canvas","document","createElement","width","height","ctx","getContext","drawImage","dataURL","toDataURL","replace","setAttribute","src","handleSubmit","files","map","f"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,yCAAP;AACA,OAAOC,QAAP,MAAqB,yBAArB;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACvB;AACA,QAAMC,eAAe,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAc;AAAE,WAAO;AAAEC,MAAAA,GAAG,EAAE;AAAP,KAAP;AAA4C,GAApF,CAFuB,CAIvB;;;AACA,QAAMC,kBAAkB,GAAG,CAAC;AAAEF,IAAAA,IAAF;AAAQG,IAAAA;AAAR,GAAD,EAAiBC,MAAjB,KAA4B;AACrDC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ,EAAoBJ,IAApB,EAA0BG,IAA1B;;AACA,QAAGC,MAAM,KAAG,MAAZ,EAAmB;AACjB,UAAIG,KAAK,GAAE,EAAX;AACAA,MAAAA,KAAK,CAACC,MAAN,GAAe,EAAf;AACAD,MAAAA,KAAK,CAACC,MAAN,CAAaC,IAAb,GAAkB,OAAlB;AACAF,MAAAA,KAAK,CAACC,MAAN,CAAaE,KAAb,GAAmBC,cAAc,CAACX,IAAI,CAACY,UAAN,CAAjC;AACAd,MAAAA,KAAK,CAACe,QAAN,CAAeN,KAAf;AACD;AACF,GATD;;AAUA,QAAMI,cAAc,GAAG,CAACG,MAAD,EAASC,QAAT,KAAqB;AAE1C,QAAIC,GAAG,GAAG,IAAIC,KAAJ,EAAV,CAF0C,CAI1C;;AAEAD,IAAAA,GAAG,CAACE,MAAJ,GAAa,YAAU;AAErB,UAAIC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAb;AACAF,MAAAA,MAAM,CAACG,KAAP,GAAeN,GAAG,CAACM,KAAnB;AACAH,MAAAA,MAAM,CAACI,MAAP,GAAgBP,GAAG,CAACO,MAApB;AACA,UAAIC,GAAG,GAAGL,MAAM,CAACM,UAAP,CAAkB,IAAlB,CAAV;AACAD,MAAAA,GAAG,CAACE,SAAJ,CAAcV,GAAd,EAAmB,CAAnB,EAAsB,CAAtB;AACA,UAAIW,OAAO,GAAGR,MAAM,CAACS,SAAP,CAAiB,WAAjB,CAAd;AAAA,UACID,OAAO,GAAGA,OAAO,CAACE,OAAR,CAAgB,gCAAhB,EAAkD,EAAlD,CADd;AAGAd,MAAAA,QAAQ,CAACY,OAAD,CAAR,CAVqB,CAUF;AAEpB,KAZD,CAN0C,CAoB1C;;;AACAX,IAAAA,GAAG,CAACc,YAAJ,CAAiB,aAAjB,EAAgC,WAAhC,EArB0C,CAqBI;;AAC9Cd,IAAAA,GAAG,CAACe,GAAJ,GAAUjB,MAAV;AAEH,GAxBC,CAfuB,CAyCvB;;;AACA,QAAMkB,YAAY,GAAIC,KAAD,IAAW;AAAE5B,IAAAA,OAAO,CAACC,GAAR,CAAY2B,KAAK,CAACC,GAAN,CAAUC,CAAC,IAAIA,CAAC,CAACnC,IAAjB,CAAZ;AAAqC,GAAvE;;AAEA,sBACE,oBAAC,QAAD;AACE,IAAA,eAAe,EAAED,eADnB;AAEE,IAAA,cAAc,EAAEG,kBAFlB;AAGE,IAAA,QAAQ,EAAE8B,YAHZ;AAIE,IAAA,MAAM,EAAC,SAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAQD,CApDD;;AAqDA,eAAenC,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport 'react-dropzone-uploader/dist/styles.css'\nimport Dropzone from 'react-dropzone-uploader'\n \nconst Form2 = (props) => {\n  // specify upload params and url for your files\n  const getUploadParams = ({ meta }) => { return { url: 'https://httpbin.org/post' } }\n  \n  // called every time a file's `status` changes\n  const handleChangeStatus = ({ meta, file }, status) => { \n    console.log(status, meta, file) \n    if(status===\"done\"){\n      let event ={};\n      event.target = {};\n      event.target.name=\"Image\";\n      event.target.value=getBase64Image(meta.previewUrl)\n      props.onChange(event);\n    }\n  }\n  const getBase64Image = (imgUrl, callback) =>{\n\n    var img = new Image();\n\n    // onload fires when the image is fully loadded, and has width and height\n\n    img.onload = function(){\n\n      var canvas = document.createElement(\"canvas\");\n      canvas.width = img.width;\n      canvas.height = img.height;\n      var ctx = canvas.getContext(\"2d\");\n      ctx.drawImage(img, 0, 0);\n      var dataURL = canvas.toDataURL(\"image/png\"),\n          dataURL = dataURL.replace(/^data:image\\/(png|jpg);base64,/, \"\");\n\n      callback(dataURL); // the base64 string\n\n    };\n\n    // set attributes and src \n    img.setAttribute('crossOrigin', 'anonymous'); //\n    img.src = imgUrl;\n\n}\n  \n  // receives array of files that are done uploading when submit button is clicked\n  const handleSubmit = (files) => { console.log(files.map(f => f.meta)) }\n \n  return (\n    <Dropzone\n      getUploadParams={getUploadParams}\n      onChangeStatus={handleChangeStatus}\n      onSubmit={handleSubmit}\n      accept=\"image/*\"\n    />\n  )\n}\nexport default Form2;"]},"metadata":{},"sourceType":"module"}